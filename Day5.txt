13.235.86.217
================================
ReplicationController


Replication	-  Replication Pod to MANY
Controller	- a Desire number of PODS -- MUst Match with --- Actual num of pods.


apiVersion: v1
kind: ReplicationController
metadata:
  name: hello-rc
spec:
  replicas: 2   
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
      - name: hello-ctr
        image: scmgalaxy/nginx-devopsschoolv1
        ports:
        - containerPort: 80


 207  cd rajesh/
  208  ls
  209  vi rc.yaml
  210  kubectl create -f rc.yaml -n=rajesh
  211  kubectl get rc -n=rajesh
  212  kubectl describe rc hello-rc -n=rajesh
  213  clear
  214  kubectl get pods -n=rajesh
  215  kubectl describe pod hello-rc-lshsv -n=rajesh
  216  kubectl get pods -n=rajesh
  217  kubectl describe pod hello-pod -n=rajesh
  218  clear
  219  ls
  220  kubectl get pods -n=rajesh
  221  kubectl get rc -n=rajesh
  222  clear
  223  ls
  224  vi rc.yaml
  225  kubectl get rc -n=rajesh
  226  kubectl apply -f rc.yaml -n=rajesh
  227  kubectl get rc -n=rajesh
  228  kubectl edit rc hello-rc
  229  kubectl edit rc hello-rc -n=rajesh
  230  kubectl get rc -n=rajesh
  231  kubectl get pods -n=rajesh
  232  kubectl
  233  clear
  234  kubectl scale -h
  235  kubectl get rc -n=rajesh
  236  clear
  237  kubectl scale --replicas=5 rc/hello-rc -n=rajesh
  238  kubectl get rc -n=rajesh
  239  kubectl delete -f rc.yaml -n=rajesh
  240  kubectl get rc -n=rajesh
  241  kubectl get pods -n=rajesh
  242  clear
  243  history

 246  kubectl apply -f rc.yaml -n=rajesh
  247  kubectl get pods -n=rajesh
  248  kubectl delete pod hello-rc-fq55c hello-rc-hp7nw -n=rajesh
  249  kubectl get pods -n=rajesh
  250  history
===============================================================
Deployment
============================================================
Replication + Controller
========================
	ReplicaSets V2 of RC

Versioning
Rollout 
Rollback
=========================

257  kubectl create -h
  258  clear
  259  kubectl create deployment -h
  260  clear
  261  ls
  262  kubectl get deploy -n=rajesh
  263  kubectl create deployment my-dep --image=scmgalaxy/nginx-devopsschoolv1 -n=rajesh
  264  kubectl get deploy -n=rajesh
  265  kubectl get pods -n=rajesh
  266  kubectl delete rc hello-rc -n=rajesh
  267  kubectl get pods -n=rajesh
  268  clear
  269  kubectl get pods -n=rajesh
  270  kubectl describe deploy my-dep -n=rajesh
  271  kubectl get rs -n=rajesh
  272  kubectl get pods -n=rajesh
  273  kubectl describe pod my-dep-747b4ffb56 -n=rajesh
  274  clear
  275  ls
  276  kubectl get deploy -n=rajesh
  277  kubectl edit deploy my-dep -n=rajesh
  278  kubectl get deploy -n=rajesh
  279  clear
  280  kubectl get deploy -n=rajesh
  281  kubectl get get pods -n=rajesh
  282  kubectl  get pods -n=rajesh
  283  kubectl scale -h
  284  clear
  285  kubectl get deploy -n=rajesh
  286  kubectl scale --replicas=6 deploy/my-dep -n=rajesh
  287  kubectl get deploy -n=rajesh
  288  kubectl get pods -n=rajesh
  289  kubectl get pods -n=rajesh -=o wide
  290  kubectl get pods -n=rajesh -o wide
  291  curl http://10.44.0.1
  292  kubectl get pods -n=rajesh -o wide
  293  curl http://10.44.0.5
  294  clear
  295  kubeclt get pods -n=rajesh
  296  kubectl get pods -n=rajesh
  297  kubectl delete pod my-dep-747b4ffb56-cjg96 my-dep-747b4ffb56-hdk8s my-dep-747b4ffb56-jlh92 my-dep-747b4ffb56-nxkds my-dep-747b4ffb56-p7t8q -n=rajesh
  298  kubectl get pods -n=rajesh
  299  history

Kubernetes Resource requests and limits of Pod and Container
https://www.devopsschool.com/blog/kubernetes-resource-requests-and-limits-of-pod-and-container/

Versioning
Rollout 
Rollback


  305  kubectl explain ns
  306  kubectl explain ns.spec
  307  kubectl explain pods
  308  kubectl explain pods.spec
  309  kubectl explain pods.spec.containers
  310  clear
  311  kubectl explain rc
  312  kubectl explain rc.spec
  313  kubectl explain rc.spec.template
  314  kubectl explain rc.spec.template.spec
  315  kubectl explain deploy
  316  kubectl explain deploy.spec
  317  kubectl explain deploy.spec.template
  318  kubectl explain deploy.spec.template.spec
  319  kubectl explain deploy.spec.template.spec.containers
  320  history



 321  clear
  322  kubectl get deploy -n=rajesh
  323  kubectl get deploy my-dep -n=rajesh
  324  kubectl get deploy my-dep -n=rajesh -o json
  325  kubectl get deploy my-dep -n=rajesh -o yaml
  326  clear
  327  kubectl get deploy my-dep -n=rajesh -o yaml >> dep.yaml
  328  ls
  329  vi dep.yaml
  330  kubectl apply -f dep.yaml -n=rajesh
  331  kubectl get deploy -n=rajesh
  332  history


Versioning
Rollout
  334  kubectl rollout
  335  kubectl get deploy -n=rajesh
  336  kubectl rollout history deploy/my-dep
  337  kubectl rollout history deploy/my-dep -n=rajesh
  338  kubectl edit deploy/my-dep -n=rajesh
  339  kubectl rollout history deploy/my-dep -n=rajesh
  340  kubectl get pods -n=rajesh
  341  kubectl get pods -n=rajesh -o wide
  342  curl http://10.44.0.3
  343  history


kubectl rollout undo deploy/my-dep --to-revision=1 -n=rajesh
kubectl rollout status deploy/my-dep -n=rajesh
kubectl rollout history deploy/my-dep -n=rajesh

 344  curl http://10.44.0.3
  345  kubectl rollout history deploy/my-dep -n=rajesh
  346  clear
  347  kubectl rollout history deploy/my-dep -n=rajesh
  348  curl http://10.44.0.3
  349  kubectl rollout -h
  350  kubectl rollout status deploy/my-dep -n=rajesh
  351  kubectl rollout history deploy/my-dep -n=rajesh
  352  kubectl rollout undo
  353  kubectl rollout undo -h
  354  clear
  355  kubectl rollout status deploy/my-dep -n=rajesh
  356  clear
  357  kubectl rollout undo deploy/my-dep --to-revision=1 -n=rajesh
  358  kubectl rollout status deploy/my-dep -n=rajesh
  359  clear
  360  kubectl rollout history deploy/my-dep -n=rajesh
  361  kubectl get pods -o wide -n=rajesh
  362  clear
  363  curl http
  364  curl http://10.44.0.3


Asssignment
======================================
Deamonsets
Statefullsets



[centos@ip-172-31-9-48 rajesh]$ kubectl create service -h
Create a service using specified subcommand.

Aliases:
service, svc

Available Commands:
  clusterip    Create a ClusterIP service.
  externalname Create an ExternalName service.
  loadbalancer Create a LoadBalancer service.
  nodeport     Create a NodePort service.

Usage:
  kubectl create service [flags] [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).
[centos@ip-172-31-9-48 rajesh]$

 380  vi rc.yaml
  381  vi pod.yaml
  382  cp pod.yaml pod1.yaml
  383  vi pod1.yaml
  384  vi pod.yaml
  385  clear
  386  ls
  387  kubectl apply -f pod1.yaml
  388  kubectl delete -f pod1.yaml
  389  kubectl delete -f pod1.yaml -n=rajesh
  390  kubectl apply -f pod1.yaml -n=rajesh
  391  kubectl apply -f pod.yaml -n=rajesh
  392  kubectl get pod -n=rajesh
  393  kubectl get pod -n=rajesh -o wide
  394  curl http://10.44.0.2
  395  curl http://10.44.0.1
  396  clear
  397  ls
  398  kubectl create -h
  399  clear
  400  kubectl create service -h
==================================
TYPES of Services
====================================
clusterip    Create a ClusterIP service.	DONE
nodeport     Create a NodePort service.
loadbalancer Create a LoadBalancer service.

  




=========================================================
clusterip = cluster ip == Service would have IP address of Clustor network
		- This create a service which is accessible inside a cluster.
		- Get IP address of POD network


nodeport == Node Port = Service is accessible at Port of the NODE...
		- This create a service which is accessible inside a cluster.
		- Get IP address of POD network
		
		- This service get port-forward at EACH NODE of the cluster.

loadbalancer	
		- This create a service which is accessible inside a cluster.
		- Get IP address of POD network
		
		- This service get port-forward at EACH NODE of the cluster.

		- Create External loadbalancer at CLOUD platoform
		- Add Each Node of the cluster to the xternal loadbalancer
=========================================
13.233.157.67


What is Service?
=========================

How PROD Setup is DONE WITh VMs?
=====================================

Load Balancer
========================
- Network LB === SERVICE 
- App LB == Ingress
==========================



SERVICE - Profile(MS)
	POD 1
	POD 1
	POD 1
	POD 1

kubectl get svc -n=rajesh --show-labels;kubectl get pods -n=rajesh --show-labels;



 398  kubectl create -h
  399  clear
  400  kubectl create service -h
  401  history
  402  clear
  403  ls
  404  more pod1.yaml
  405  clear
  406  kubectl get pods -n=rajesh -o wide
  407  curl http://10.44.0.1
  408  curl http://10.44.0.2
  409  ls
  410  kubectl get svc -n=rajesh
  411  kubectl create service -h
  412  kubectl create service clusterip -h
  413  clear
  414  kubectl create service clusterip -h
  415  clear
  416   kubectl create service clusterip my-cs --tcp=5678:80 -n=rajesh
  417  kubectl get svc -n=rajesh
  418  kubectl describe svc my-cs -n=rajesh
  419  clear
  420  ls
  421  kubectl get svc -n=rajesh --show-labels;kubectl get pods -n=rajesh --show-labels;
  422  kubectl edit svc my-cs -n=rajesh
  423  kubectl get svc -n=rajesh --show-labels;kubectl get pods -n=rajesh --show-labels;
  424  kubectl describe svc my-cs -n=rajesh
  425  kubectl edit svc my-cs -n=rajesh
  426  clear
  427  kubectl describe svc my-cs -n=rajesh
  428  curl http://10.111.147.66
  429  curl http://10.44.0.1:80
  430  curl http://10.44.0.2:80
  431  curl http://10.111.147.66:5678
  432  clear
  433  watch curl http://10.111.147.66:5678



kubectl create service nodeport my-ns --tcp=5678:80 -n=rajesh

13.235.86.217:30211


kubectl create service loadbalancer my-lb --tcp=5678:80 -n=rajesh


http://ver-1126237619.ap-south-1.elb.amazonaws.com/

http://ver.devopsschool.com
==========================
NETWORK - Service
APP - ingress
https://www.devopsschool.com/blog/?s=ingress

https://www.devopsschool.com/blog/persistentvolume-persistentvolumeclaim-volumes-using-hostpath/

https://www.devopsschool.com/blog/kubernetes-persistentvolume-and-persistentvolumeclaim-using-nfs-volume-types/






