Master
	API Server -> POD -> Container -> Image -> Google Registry	
	Etcd -> POD -> Container -> Image -> Google Registry
	Controller Manager -> POD -> Container -> Image -> Google Registry
	Schedular -> POD -> Container -> Image -> Google Registry

	Kube Proxy -> POD -> Container -> Image -> Google Registry

	Kubeadm init
	Kubelet
	Docker
	Kubectl
		
Worker
	Kube Proxy -> POD -> Container -> Image -> Google Registry

	Kubeadm join
	Kubelet
	Docker
	Kubectl

Workstation
	Kubectl
================================================================
How to setup a clustor - 40 Supported PLATFORM

Learning
	Laptop  -> Vbox -> 1 VM - (MASTER + WORKER) = minikube

Production
	Physcial server or Virtual Server - Manually - Kubeadm 
	
	Cloud - Manually - KOPS

	Hosted - 
		AWS	- EKS
		Azure	- AKS
		GC	- GKE	




CENTOS 2 = MASTER + WORKSTATION
============================================================
65.0.5.97
https://www.devopsschool.com/blog/setting-up-kubernetes-clusters-using-kubeadm-manual-way-in-rhel-7-centos7/

Master = Step 1  - Step 10 

WORKSTATION in MASTER = Step 11

VERIFY MASTER from WORKSTATION = Step 12 

Install POD network from WORKSTATION into MASTER = Step 13

========================================================================
CENTOS 1 = WORKER
		- REMOVE EXISTING DOCKER FIRST

$ docker rm $(docker ps -aq)
$ docker stop $(docker ps -a -q)
$ docker rm $(docker ps -a -q)
$ docker rmi $(docker images -q)
$ docker rm -f -v $(docker ps -q)
$ iptables --flush
$ echo "1" >/proc/sys/net/bridge/bridge-nf-call-iptables
$ sudo yum remove docker 
$ sudo yum remove docker docker-client 
$ sudo yum remove docker docker-client-latest 
$ sudo yum remove docker docker-common
$ sudo yum remove docker docker-latest 
$ sudo yum remove docker docker-latest-logrotate
$ sudo yum remove docker docker-logrotate 
$ sudo yum remove docker docker-selinux 
$ sudo yum remove docker docker-engine-selinux
$ sudo yum remove docker docker-engine
$ sudo rm -rf /var/lib/docker
$ yum remove docker-ce docker-ce-cli

# Follow Step 1 
# Follow Step 2
# Follow Step 3
# Follow Step 4
# Follow Step 5
# Follow Step 6
# Follow Step 7
# Follow Step 8

&&&&
kubeadm join




To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.9.48:6443 --token 4lnnwq.mmtumjht99lp3t6p \
    --discovery-token-ca-cert-hash sha256:38ef791588269977840cd82d344dcedd792a095a92c32410775c462454aec2bb
=============================================
65.0.92.226


https://www.devopsschool.com/blog/understanding-the-tools-sets-in-kubernetes-ecosystem/
https://www.devopsschool.com/blog/list-of-top-service-mesh-implementation-tools-for-microservices-and-kubernetes/
=================================================================================

How Kubectl would be configured with Clustor - API server?
==============================================================
kubectl 
	$USER_HOME/.kube/config


Content of config? -- YAML
--------------------------------------
Clustor(S):
		Clustor1: http://4.5.56.6:6400
		Clustor2: http://4.6.56.6:6400
		Clustor3: http://4.6.56.6:6400
User(S):
		User1: Key and cert
		User2: Key and cert
		User3: Key and cert
Context(S):
		Context1 = Clustor1 + User2
		Context2 = Clustor2 + User1
		Context3 = Clustor3 + User3
Curr-context:
		Context2

==========================================================================
What is my desire? -- api-resources
=================================

nodes
namespaces
pods

[centos@ip-172-31-9-48 ~]$ kubectl api-resources
NAME                              SHORTNAMES   APIGROUP                       NAMESPACED   KIND
bindings                                                                      true         Binding
componentstatuses                 cs                                          false        ComponentStatus
configmaps                        cm                                          true         ConfigMap
endpoints                         ep                                          true         Endpoints
events                            ev                                          true         Event
limitranges                       limits                                      true         LimitRange
namespaces                        ns                                          false        Namespace
nodes                             no                                          false        Node
persistentvolumeclaims            pvc                                         true         PersistentVolumeClaim
persistentvolumes                 pv                                          false        PersistentVolume
pods                              po                                          true         Pod
podtemplates                                                                  true         PodTemplate
replicationcontrollers            rc                                          true         ReplicationController
resourcequotas                    quota                                       true         ResourceQuota
secrets                                                                       true         Secret
serviceaccounts                   sa                                          true         ServiceAccount
services                          svc                                         true         Service
mutatingwebhookconfigurations                  admissionregistration.k8s.io   false        MutatingWebhookConfiguration
validatingwebhookconfigurations                admissionregistration.k8s.io   false        ValidatingWebhookConfiguration
customresourcedefinitions         crd,crds     apiextensions.k8s.io           false        CustomResourceDefinition
apiservices                                    apiregistration.k8s.io         false        APIService
controllerrevisions                            apps                           true         ControllerRevision
daemonsets                        ds           apps                           true         DaemonSet
deployments                       deploy       apps                           true         Deployment
replicasets                       rs           apps                           true         ReplicaSet
statefulsets                      sts          apps                           true         StatefulSet
tokenreviews                                   authentication.k8s.io          false        TokenReview
localsubjectaccessreviews                      authorization.k8s.io           true         LocalSubjectAccessReview
selfsubjectaccessreviews                       authorization.k8s.io           false        SelfSubjectAccessReview
selfsubjectrulesreviews                        authorization.k8s.io           false        SelfSubjectRulesReview
subjectaccessreviews                           authorization.k8s.io           false        SubjectAccessReview
horizontalpodautoscalers          hpa          autoscaling                    true         HorizontalPodAutoscaler
cronjobs                          cj           batch                          true         CronJob
jobs                                           batch                          true         Job
certificatesigningrequests        csr          certificates.k8s.io            false        CertificateSigningRequest
leases                                         coordination.k8s.io            true         Lease
endpointslices                                 discovery.k8s.io               true         EndpointSlice
events                            ev           events.k8s.io                  true         Event
ingresses                         ing          extensions                     true         Ingress
ingressclasses                                 networking.k8s.io              false        IngressClass
ingresses                         ing          networking.k8s.io              true         Ingress
networkpolicies                   netpol       networking.k8s.io              true         NetworkPolicy
runtimeclasses                                 node.k8s.io                    false        RuntimeClass
poddisruptionbudgets              pdb          policy                         true         PodDisruptionBudget
podsecuritypolicies               psp          policy                         false        PodSecurityPolicy
clusterrolebindings                            rbac.authorization.k8s.io      false        ClusterRoleBinding
clusterroles                                   rbac.authorization.k8s.io      false        ClusterRole
rolebindings                                   rbac.authorization.k8s.io      true         RoleBinding
roles                                          rbac.authorization.k8s.io      true         Role
priorityclasses                   pc           scheduling.k8s.io              false        PriorityClass
csidrivers                                     storage.k8s.io                 false        CSIDriver
csinodes                                       storage.k8s.io                 false        CSINode
storageclasses                    sc           storage.k8s.io                 false        StorageClass
volumeattachments                              storage.k8s.io                 false        VolumeAttachment

kubectl
kubectl version
kubectl cluster-info
kubectl api-resources
kubectl api-versions
kubectl get pods
kubectl get pods --all--namespaces
kubeclt get ns
kubectl get pods -n=kube-system
kubectl config view
   38  kubectl config views
   39  kubectl config view
   40  more $HOME/.kube/config
==============================================================
AUTH -

VERB - GET PUT POST DELETE
==========================================
CRUD
	CREATE 
		CMD
			create
		YAML
			create -f yamlfile
	READ
		CMD
			get
	UPDATE
		CMD
			edit
		YAML
			apply -f yamlfile
	DELETE
		CMD
			delete
		YAML
			delete -f yamlfile

===============================================================
https://nirmata.com/2018/11/30/kubernetes-namespaces/

  45  clear
   46  kubectl get ns
   47  kubectl create -h
   48  clear
   49  kubectl create namespace -h
   50  clear
   51  kubectl create namespace dev
   52  kubectl get ns
   53  kubectl create namespace qa
   54  kubectl get ns
   55  kubectl edit ns dev
   56  kubectl delete ns qa
   57  kubectl get ns
=========================================================
30 mins























